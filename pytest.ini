[tool:pytest]
# Pytest configuration for Gianna testing framework

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output configuration
addopts =
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=gianna
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
    --durations=10
    --maxfail=3
    -ra

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interaction
    performance: Performance and load testing
    voice: Voice processing and audio tests
    llm: Large Language Model integration tests
    agents: ReAct agents and coordination tests
    memory: Semantic memory and learning tests
    optimization: Performance optimization tests
    end_to_end: Complete workflow tests
    slow: Tests that take more than 5 seconds
    external_api: Tests requiring external API access
    database: Tests requiring database operations
    audio_hardware: Tests requiring audio hardware
    mock_only: Tests using mocks for all external dependencies

# Test coverage configuration
[coverage:run]
source = gianna
branch = True
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*
    setup.py
    tasks.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
title = Gianna Test Coverage Report

[coverage:xml]
output = coverage.xml
